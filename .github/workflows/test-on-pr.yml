name: Test on Pull Request

# Controls when the action will run.
on:
  pull_request:
    paths-ignore:
      - 'docs/**'
      - 'design/**'
      - 'examples/**'
      - 'extensions/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build_kruize-ui:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          repository: kruize/kruize-ui
      - uses: actions/setup-node@v3
        with:
          node-version: 20.7.0
          cache: 'npm'
      - name: Install dependencies
        run: npm config set legacy-peer-deps true && npm install
      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.3.0
        with:
          minikube version: 'v1.16.0'
          kubernetes version: 'v1.19.2'
       
      - name: Build Kruize UI image
        run: |
          echo Build Kruize UI image
          echo "***************************************************************"
          pr_number=${{ github.event.pull_request.number }}
          echo "pr_number=${pr_number}" >> "$GITHUB_ENV"
          docker build -t bmenghan/kruize_ui_image_${pr_number}:latest .
          docker images | grep kruize

      - uses: actions/checkout@v3
        with:
          repository: kruize/autotune

      # - name: Build autotune
      #   run: |
      #     echo Build autotune
      #     ./build.sh -i docker.io/kruize/autotune_operator:0.0.20_mvp
      #     docker images | grep autotune     
      - name: Check cluster info on minikube
        run: |
          kubectl cluster-info
          kubectl get pods -n kube-system
      - name: Install Prometheus on minikube
        run: |
          echo Install Prometheus on minikube
          cd scripts
          ./prometheus_on_minikube.sh -as
      - name: Deploy Kruize in crc mode
        run: |
          echo Deploy kruize in crc mode
          echo "***************************************************************"
          echo "PR_NUMBER = ${{ env.pr_number }}"
          ./deploy.sh -m crc -i docker.io/kruize/autotune_operator:0.0.20_mvp -u quay.io/bmenghan/kruize_ui_image_${pr_number}:latest
      - name: check fail
        run: | 
          kubectl get pods -n monitoring
          kubectl describe pods -n monitoring 
      - name: Test UI
        run: |
          npm run cypress-report --config baseUrl=

      - name: Archive JUnit report
        uses: actions/upload-artifact@v2
        with:
          name: cypress-results
          path: cypress/reports/junit

        # if: always()

      - name: Archive results
        if: always()
        run: |
          cd ${GITHUB_WORKSPACE}
          tar cvf crc_results.tar kruize_test_results

      - name: Upload results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: crc-results
          path: ./crc_results.tar
          retention-days: 2
